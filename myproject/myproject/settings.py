"""
Django settings for myproject project.
Generated by 'django-admin startproject' using Django 5.0.6.
"""

from pathlib import Path
import os
import dj_database_url

# -------------------- BASE DIR --------------------
BASE_DIR = Path(__file__).resolve().parent.parent

# -------------------- SECURITY --------------------
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-gl0cv^og+^1mul@r++-feyx11_y8cd*zx)_dlf9m_+n+764o1i')

# Default DEBUG = True locally; Render sets RENDER=True in environment
DEBUG = os.getenv('DEBUG', 'True') == 'True'

# Allow all hosts locally, restrict in production
ALLOWED_HOSTS = ['localhost', '127.0.0.1']
if os.getenv('RENDER'):
    ALLOWED_HOSTS.append('.onrender.com')

# -------------------- APPLICATIONS --------------------
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Your app(s)
    'home',
]

# -------------------- MIDDLEWARE --------------------
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# -------------------- URLS --------------------
ROOT_URLCONF = 'myproject.urls'

# -------------------- TEMPLATES --------------------
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],  # global templates directory
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# -------------------- WSGI --------------------
WSGI_APPLICATION = 'myproject.wsgi.application'

# -------------------- DATABASE --------------------
# Local DB (for development)
LOCAL_DB = {
    'ENGINE': 'django.db.backends.mysql',
    'NAME': 'dataentry',
    'USER': 'root',
    'PASSWORD': '1234',
    'HOST': '127.0.0.1',
    'PORT': '3306',
}

# Production DB (Render / Cloud)
if os.getenv('RENDER'):
    DATABASES = {
        'default': dj_database_url.config(
            default=os.getenv('DATABASE_URL'),
            conn_max_age=600,
            ssl_require=False
        )
    }
else:
    DATABASES = {'default': LOCAL_DB}

# -------------------- PASSWORD VALIDATORS --------------------
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
]

# -------------------- INTERNATIONALIZATION --------------------
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# ðŸ‘‡ Add this line â€” itâ€™s required for collectstatic
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# -------------------- MEDIA FILES --------------------
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# -------------------- DEFAULT AUTO FIELD --------------------
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# -------------------- LOGGING (optional, for debugging) --------------------
if not DEBUG:
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'handlers': {
            'console': {'class': 'logging.StreamHandler'},
        },
        'root': {
            'handlers': ['console'],
            'level': 'INFO',
        },
    }
